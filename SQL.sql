/*CRIAÇÃO DAS TABELAS*/

CREATE TABLE ALUNO(
    ID INT PRIMARY KEY,
    NOME TEXT NOT NULL
);
CREATE TABL E RESPONSAVEL(
    ID INT PRIMARY KEY,
    NOME TEXT NOT NULL
);
CREATE TABLE PARENTESCO(
    PARENTESCO TEXT NOT NULL,
    IDALUNO INT,
    IdResonsavel INT,
    FOREIGN KEY (IDALUNO) REFERENCES ALUNO (ID),
    FOREIGN KEY (IdResonsavel) REFERENCES RESPONSAVEL (ID)
);
/*
1) Escreva comandos SQL para inserir os dados abaixo conforme o diagrama
apresentado.
a) Pablo é Pai de Lucas
b) Brenda é Mãe de Lucas
*/

/*Aluno*/
INSERT INTO ALUNO (ID, NOME) VALUES (1, 'Lucas');

/*Responsavel*/
INSERT INTO RESPONSAVEL (ID, NOME) VALUES (1, 'Pablo');
INSERT INTO RESPONSAVEL (ID, NOME) VALUES (2, 'Brenda');

/*Parentesco*/
INSERT INTO PARENTESCO (PARENTESCO, IDALUNO, IDRESONSAVEL) VALUES ('Pai', 1, 1);
INSERT INTO PARENTESCO (PARENTESCO, IDALUNO, IDRESONSAVEL) VALUES ('Mãe', 1, 2);


/*
2) Escreva uma consulta SQL para retornar dados únicos conforme tabela abaixo.
Caso o aluno tenha mais de dois responsáveis, traga apenas os dois primeiros
responsáveis encontrados na tabela.
*/

SELECT A.NOME AS ALUNO,
    (SELECT R1.NOME FROM RESPONSAVEL R1 INNER JOIN PARENTESCO P ON P.IDALUNO = A.ID WHERE A.ID = P.IDALUNO LIMIT 1) AS RESPONSAVEL,
    (SELECT P1.PARENTESCO FROM PARENTESCO P1 WHERE P1.IDALUNO = A.ID LIMIT 1) AS PARENTESCO,
    (SELECT R.NOME FROM RESPONSAVEL R INNER JOIN PARENTESCO P ON P.IDALUNO = A.ID WHERE A.ID = P.IDALUNO 
    AND R.NOME != (SELECT R1.NOME FROM RESPONSAVEL R1 INNER JOIN PARENTESCO P ON P.IDALUNO = A.ID WHERE A.ID = P.IDALUNO LIMIT 1) LIMIT 1) AS RESPONSAVEL,
    (SELECT P.PARENTESCO FROM PARENTESCO P WHERE P.IDALUNO = A.ID 
    AND P.PARENTESCO != (SELECT P1.PARENTESCO FROM PARENTESCO P1 WHERE P1.IDALUNO = A.ID LIMIT 1) LIMIT 1) AS PARENTESCO
FROM ALUNO A;

/*
BÔNUS
1) Escreva uma consulta SQL para trazer todos os dados. Seja criativo.
*/
CREATE OR REPLACE PROCEDURE AllDatas()
BEGIN
DECLARE varAlunoNome TEXT; 
DECLARE varAlunoId INT;
DECLARE varRespNome TEXT;
DECLARE varRespId INT;
DECLARE varParResp TEXT;
DECLARE varParAl TEXT;
DECLARE varParPar TEXT;
DECLARE responsaveis CURSOR FOR
SELECT ID, NOME FROM RESPONSAVEL;
DECLARE alunos CURSOR FOR 
SELECT ID, NOME FROM ALUNO;
DECLARE parentescos CURSOR FOR
SELECT A.NOME, R.NOME, P.PARENTESCO  FROM PARENTESCO P
INNER JOIN ALUNO A ON A.ID = P.IDALUNO
INNER JOIN RESPONSAVEL R ON R.ID = P.IdResonsavel;


OPEN alunos;
OPEN parentescos;
OPEN responsaveis;

read_loop: LOOP

FETCH ALUNOS INTO varAlunoId, varAlunoNome;
FETCH RESPONSAVEIS INTO varRespId, varRespNome;
FETCH PARENTESCOS INTO varParAl, varParResp, varParPar;

SELECT varAlunoId AS ALUNO, varAlunoNome AS NOME;
SELECT varRespId AS RESPONSAVEL, varRespNome AS NOME;
SELECT varParAl AS ALUNO, varParResp AS RESPONSAVEL, varParPar AS PARENTESCO;

END LOOP;

CLOSE alunos;
CLOSE parentescos;
CLOSE responsaveis;

END;

